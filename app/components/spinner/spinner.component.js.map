{"version":3,"file":"spinner.component.js","sourceRoot":"","sources":["spinner.component.ts"],"names":[],"mappings":";IAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;YAUb;gBAAA;oBAEY,qBAAgB,GAAY,KAAK,CAAC;oBAGnC,UAAK,GAAW,GAAG,CAAC;gBA4B/B,CAAC;gBAzBG,sBAAW,uCAAS;yBAApB,UAAqB,KAAc;wBAAnC,iBAeC;wBAdG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BACT,IAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAC9B,MAAM,CAAC;wBACX,CAAC;wBAED,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;4BACtB,MAAM,CAAC;wBACX,CAAC;wBAED,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;4BAC7B,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAC9B,KAAI,CAAC,aAAa,EAAE,CAAC;wBACzB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBACnB,CAAC;;;mBAAA;gBAEO,wCAAa,GAArB;oBACI,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAClC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBACpC,CAAC;gBAED,sCAAW,GAAX;oBACI,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,CAAC;gBA5BD;oBAAC,YAAK,EAAE;;+DAAA;gBAGR;oBAAC,YAAK,EAAE;;;iEAAA;gBAbZ;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,YAAY;wBACtB,WAAW,EAAE,wBAAwB;wBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;qBACvC,CAAC;;oCAAA;gBAkCF,uBAAC;YAAD,CAAC,AAjCD,IAiCC;YAjCD,+CAiCC,CAAA","sourcesContent":["'use strict';\r\n\r\nimport {Component, Input, OnDestroy} from 'angular2/core';\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: 'my-spinner',\r\n    templateUrl: 'spinner.component.html',\r\n    styleUrls: ['spinner.component.css'],\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n    private currentTimeout: number;\r\n    private isDelayedRunning: boolean = false;\r\n\r\n    @Input()\r\n    public delay: number = 300;\r\n\r\n    @Input()\r\n    public set isRunning(value: boolean) {\r\n        if (!value) {\r\n            this.cancelTimeout();\r\n            this.isDelayedRunning = false;\r\n            return;\r\n        }\r\n\r\n        if (this.currentTimeout) {\r\n            return;\r\n        }\r\n\r\n        this.currentTimeout = setTimeout(() => {\r\n            this.isDelayedRunning = value;\r\n            this.cancelTimeout();\r\n        }, this.delay);\r\n    }\r\n\r\n    private cancelTimeout(): void {\r\n        clearTimeout(this.currentTimeout);\r\n        this.currentTimeout = undefined;\r\n    }\r\n\r\n    ngOnDestroy(): any {\r\n        this.cancelTimeout();\r\n    }\r\n}\r\n"]}